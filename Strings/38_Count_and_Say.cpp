/*
LeetCode: 38. Count and Say  
Link: https://leetcode.com/problems/count-and-say/

Problem:  
Given an integer `n`, generate the n-th term of the "count-and-say" sequence.  
The sequence starts with `"1"`, and each term is generated by describing the previous term.

Example:  
1 → "1"  
2 → "11" (one 1)  
3 → "21" (two 1s)  
4 → "1211" (one 2, one 1)  
5 → "111221" (one 1, one 2, two 1s)

Approach: Iterative String Construction  
- Start with `"1"` as the base.
- For each step, read the current term, count consecutive digits, and build the next term as "count + digit".
- Repeat this process `n-1` times.

Time Complexity: O(n * m) — where `m` is the average length of strings formed.  
Space Complexity: O(m) — for storing the current term.
*/

#include <iostream>
using namespace std;

class Solution {
public:
    string countAndSay(int n) {
        string result = "1";
        for (int i = 2; i <= n; i++) {
            string current = "";
            int count = 1;

            for (int j = 1; j <= result.length(); j++) {
                if (j < result.length() && result[j] == result[j - 1]) {
                    count++;
                } else {
                    current += to_string(count);
                    current += result[j - 1];
                    count = 1;
                }
            }
            result = current;
        }
        return result;
    }
};